@use '../../_common/variable' as var;
@use '../../_common/mixin/' as mixin;
@use '../../_common/extend/' as *;
@use '../../_common/function/' as func;

// .m-wdg-toggle
// -----------------------------------------------------------------------------
.m-wdg-toggle {
  $this: &;
  @extend %module-margin-large;
  display: flex;
  flex-direction: column;
  gap: 8px 0;
  width: 100%;
  &__item {
    position: relative;
    width: 100%;
    &.js-toggle--opened {
      #{$this}__button {
        border-bottom: none;
        &::after {
          transform: translateY(-50%) rotate(0deg);
      }
      }
    }
  }
  &__button {
    background-color: #E9EDF5;
    border: 1px solid var.$BORDER_COLOR;
    padding: 16px 60px 16px 16px;
    position: relative;
    width: 100%;
    // 開閉マーク
    &::before,
    &::after {
      background-color: var.$PRIMARY_COLOR;
      content: '';
      height: 2px;
      position: absolute;
      right: 28px;
      top: 50%;
      width: 12px;
      z-index: var.$Z_INDEX_LAYER;
    }
    &::before {
      transform: translateY(-50%) rotate(0deg);
    }
    &::after {
      transform: translateY(-50%) rotate(90deg);
      transition: transform 0.3s;
    }
    &:focus,
    &:hover {
      &::before,
      &::after {
        background-color: var.$BACKGROUND_COLOR;
        z-index: var.$Z_INDEX_LAYER;
      }
      #{$this}__buttonText {
        text-decoration: underline;
        &::after {
          background-color: var.$PRIMARY_COLOR;
        }
      }
    }
  }
  &__buttonText {
    display: block;
    font-size: func.px-to-rem(20);
    font-weight: bold;
    line-height: 1.4;
    text-align: left;
    // 開閉マーク 丸
    &::after {
      border: 1px solid var.$PRIMARY_COLOR;
      border-radius: 50%;
      content: '';
      height: 33px;
      position: absolute;
      right: 18px;
      top: 50%;
      transform: translateY(-50%);
      transition: background-color 0.3s;
      width: 33px;
    }
  }
  &__content {
    border-bottom: 1px solid var.$BORDER_COLOR;
    border-left: 1px solid var.$BORDER_COLOR;
    border-right: 1px solid var.$BORDER_COLOR;
  }
  &__contentInner {
    @extend %reset-margin;
    padding: 24px 16px;

    > #{$this} {
      gap: 8px 0;
      #{$this}__item {
        &.js-toggle--opened {
          #{$this}__button {
            border-bottom: 1px solid var.$BORDER_COLOR;
            &::after {
              transform: translateY(-50%) rotate(0deg);
            }
          }
        }
      }
      #{$this}__button {
        background-color: var.$BACKGROUND_COLOR;
        border-bottom: 1px solid var.$BORDER_COLOR;
        padding: 9px 30px 9px 20px;
        position: relative;
        width: 100%;
        // 開閉マーク
        &::before,
        &::after {
          background-color: var.$BACKGROUND_COLOR;
          right: 12px;
          top: 50%;
          width: 10px;
        }
        &::after {
          transform: translateY(-50%) rotate(90deg);
          transition: transform 0.3s;
        }
        &:focus,
        &:hover {
          &::before,
          &::after {
            background-color: var.$BACKGROUND_COLOR;
            z-index: var.$Z_INDEX_LAYER;
          }
          #{$this}__buttonText {
            text-decoration: underline;
          }
        }
      }
      #{$this}__buttonText {
        font-size: func.px-to-rem(17);
        line-height: 1.5;
        position: relative;
        // テキスト前装飾
        &::before {
          background-color: #00c6da;
          border-radius: 0 4px 0 4px;
          content: "";
          display: block;
          height: 90%;
          left: -14px;
          position: absolute;
          top: 50%;
          transform: translateY(-50%);
          width: 3px;
        }
        // 開閉マーク 丸
        &::after {
          background-color: var.$PRIMARY_COLOR;
          height: 18px;
          right: -22px;
          width: 18px;
        }
      }
      #{$this}__contentInner {
        padding: 8px 0 16px;
      }
      #{$this}__content {
        border: none;
      }
    }
  }
}

// Wide Viewport
@include mixin.media-query {
  .m-wdg-toggle {
    $this: &;
    gap: 16px 0;
    &__button {
      padding: 22px 80px 17px 25px;
      &::before,
      &::after {
        right: 34px;
        width: 20px;
      }
    }
    &__buttonText {
      font-size: func.px-to-rem(24);
      &::after {
        height: 40px;
        right: 24px;
        width: 40px;
      }
    }
    &__contentInner {
      padding: 32px 48px;
      > #{$this} {
        gap: 16px 0;
        #{$this}__contentInner {
          padding-top: 16px;
        }
        #{$this}__button {
          padding: 10px 45px 10px 28px;
          &::before,
          &::after {
            right: 27px;
          }
        }
        #{$this}__buttonText {
          font-size: func.px-to-rem(20);
          &::before {
            left: -16px;
          }
        }
      }
    }
  }
}
