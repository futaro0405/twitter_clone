@use 'sass:map';
@use '../../_common/variable' as var;
@use '../../_common/mixin/' as mixin;
@use '../../_common/extend/' as *;
@use '../../_common/function/' as func;

$modifierMap: (
  left: left,
  right: right,
);

// .m-media
// -----------------------------------------------------------------------------
.m-media {
  $this: &;
  @extend %module-margin;
  @include mixin.inlineLinkIcon(
    $link: '.m-media__wrap',
    $margin: -2px 0 0 6px
  );

  &__wrap {
    display: table;
    margin: 0 auto;
    > :last-child {
      margin-bottom: 0;
    }
    &:any-link {
      text-decoration: none;
      &:hover,
      &:focus {
        #{$this}__image {
          box-shadow: 0 1px 8px rgba(var.$COLOR_CHIP_BLACK, .16);
        }
        #{$this}__linkText {
          text-decoration: underline;
        }
      }
    }
  }

  &__image {
    display: block;
    margin-bottom: 8px;
  }
  &__caption,
  &__linkText {
    caption-side: bottom;
    display: table-caption;
  }
  &__caption {
    font-size: func.px-to-rem(12);
    line-height: 1.6;
    text-align: center;
  }
  &__linkText {
    font-size: func.px-to-rem(16);
  }

  @each $key, $val in $modifierMap {
    &--#{$key} {
      #{$this}__wrap {
        margin-#{$val}: 0;
      }
    }
  }
}


// Narrow Viewport
@include mixin.media-query($range: below) {
  .m-media {
    $this: &;
    @each $key, $val in $modifierMap {
      &--#{$key}-narrow {
        #{$this}__wrap {
          margin-#{$val}: 0;
        }
      }
    }
  }
}


// Wide Viewport
@include mixin.media-query {
  .m-media {
    $this: &;
    &__caption {
      font-size: func.px-to-rem(14);
    }
    @each $key, $val in $modifierMap {
      &--#{$key}-wide {
        #{$this}__wrap {
          margin-#{$val}: 0;
        }
      }
    }
  }
}
